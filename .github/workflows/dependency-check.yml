name: Dependency Updates Check

on:
  schedule:
    # Run weekly on Monday at 9:00 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch: # allow manually calling the action

jobs:
  check-dependencies:
    name: Check for Dependency Updates
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          
      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio
          
      - name: Check for PlatformIO updates
        id: pio-update
        run: |
          echo "Current PlatformIO version:"
          pio --version
          
          echo "Checking for updates..."
          pip list --outdated | grep platformio || echo "PlatformIO is up to date"
          
      - name: Check for library updates
        id: lib-update
        run: |
          echo "Checking library updates..."
          pio pkg outdated || echo "All libraries are up to date"
          
      - name: Check platform updates
        id: platform-update
        run: |
          echo "Checking platform updates..."
          pio pkg outdated --global || echo "All platforms are up to date"
          
      - name: Generate update report
        id: report
        run: |
          {
            echo "# Dependency Update Report"
            echo ""
            echo "**Generated on:** $(date)"
            echo ""
            echo "## PlatformIO Core"
            pio --version
            echo ""
            echo "## Library Dependencies"
            pio pkg list
            echo ""
            echo "## Outdated Packages"
            pio pkg outdated || echo "All packages are up to date"
            echo ""
            echo "## Platform Packages"
            pio pkg list --global
          } > update-report.md
          
          cat update-report.md
          
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-update-report
          path: update-report.md
          retention-days: 90
          
      - name: Create or update issue for outdated dependencies
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('update-report.md', 'utf8');
            
            // Check if there's already an open issue
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'dependencies',
              creator: 'github-actions[bot]'
            });
            
            const issueTitle = 'ðŸ“¦ Dependency Updates Available';
            const issueBody = `${report}\n\n---\n\n*This issue is automatically generated by the dependency check workflow. Run \`pio pkg update\` to update dependencies.*`;
            
            const existingIssue = issues.data.find(issue => issue.title === issueTitle);
            
            if (existingIssue) {
              // Update existing issue
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: existingIssue.number,
                body: issueBody
              });
              console.log(`Updated issue #${existingIssue.number}`);
            } else {
              // Create new issue
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: issueTitle,
                body: issueBody,
                labels: ['dependencies', 'automation']
              });
              console.log('Created new dependency update issue');
            }

